AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Garage Project

  '
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Frontend
      Parameters:
      - pProjectName
      - pEnvironment
      - pOauthToken
      - pRepoUrl
    ParameterLabels:
      pProjectName:
        default: Name of your project
      pEnvironment:
        default: Repository Branch
      pOauthToken:
        default: Access Token generated by curl -X POST -u "KEY:SECRET" https://bitbucket.org/site/oauth2/access_token
          -d grant_type=client_credentials
      pRepoUrl:
        default: Bitbucket repository URL. https://bitbucket.org/<workspace>/<repository>
Parameters:
  pEnvironment:
    Type: String
    Description: Branch Name
  pProjectName:
    Type: String
    Description: Project Name
  pOauthToken:
    Type: String
    Description: Bitbucket Repository Access Token
  pRepoUrl:
    Type: String
    Description: Bitbucket Repository URL
Resources:
  rAmplifyRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: ${pProjectName}-${pEnvironment}-amplify
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - amplify.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName:
          Fn::Sub: ${pProjectName}-${pEnvironment}-amplify
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - amplify:*
            Resource: '*'
      Tags:
      - Key: ProjectName
        Value:
          Ref: pProjectName
      - Key: Environment
        Value:
          Ref: pEnvironment
  rAmplifyApp:
    Type: AWS::Amplify::App
    Properties:
      Name:
        Fn::Sub: ${pProjectName}-${pEnvironment}-ui
      Description: Angular App
      CustomRules:
      - Source: </^[^.]+$|\.(?!(css|gif|ico|jpg|js|png|txt|svg|woff|ttf)$)([^.]+$)/>
        Target: /index.html
        Status: '200'
      EnvironmentVariables:
      - Name: REACT_APP_user_pools_id
        Value:
          Ref: rUserPool
      - Name: PROJECT_NAME
        Value:
          Ref: pProjectName
      - Name: ENVIRONMENT_NAME
        Value:
          Ref: pEnvironment
      - Name: cognito_region
        Value:
          Ref: AWS::Region
      - Name: user_pools_id
        Value:
          Ref: rUserPool
      - Name: user_pools_web_client_id
        Value:
          Ref: rUserPoolClient
      - Name: identityPoolId
        Value:
          Ref: rIdentityPool
      Repository:
        Ref: pRepoUrl
      OauthToken:
        Ref: pOauthToken
      Tags:
      - Key: ProjectName
        Value:
          Ref: pProjectName
      - Key: Environment
        Value:
          Ref: pEnvironment
      IAMServiceRole:
        Fn::GetAtt:
        - rAmplifyRole
        - Arn
  rAmplifyBranch:
    Type: AWS::Amplify::Branch
    Properties:
      BranchName:
        Ref: pEnvironment
      AppId:
        Fn::GetAtt:
        - rAmplifyApp
        - AppId
      Description: Main Branch
      EnableAutoBuild: true
      Tags:
      - Key: ProjectName
        Value:
          Ref: pProjectName
      - Key: Environment
        Value:
          Ref: pEnvironment
  rUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: true
      AutoVerifiedAttributes:
      - email
      EnabledMfas:
      - SOFTWARE_TOKEN_MFA
      MfaConfiguration: 'ON'
      Schema:
      - AttributeDataType: String
        Mutable: true
        Name: nickname
        Required: true
      - AttributeDataType: String
        Mutable: false
        Name: email
        Required: true
      UsernameAttributes:
      - email
      UsernameConfiguration:
        CaseSensitive: false
      UserPoolName:
        Fn::Sub: ${pProjectName}-${pEnvironment}
  rUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      AccessTokenValidity: 1
      IdTokenValidity: 1
      RefreshTokenValidity: 365
      AllowedOAuthFlows:
      - implicit
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
      - email
      - openid
      - aws.cognito.signin.user.admin
      CallbackURLs:
      - http://localhost:4200/login
      ClientName:
        Fn::Sub: ${pProjectName}-${pEnvironment}
      EnableTokenRevocation: true
      ExplicitAuthFlows:
      - ALLOW_ADMIN_USER_PASSWORD_AUTH
      - ALLOW_CUSTOM_AUTH
      - ALLOW_USER_PASSWORD_AUTH
      - ALLOW_USER_SRP_AUTH
      - ALLOW_REFRESH_TOKEN_AUTH
      LogoutURLs:
      - http://localhost:4200/login
      PreventUserExistenceErrors: ENABLED
      ReadAttributes:
      - nickname
      - email
      - email_verified
      SupportedIdentityProviders:
      - COGNITO
      TokenValidityUnits:
        AccessToken: hours
        IdToken: hours
        RefreshToken: days
      UserPoolId:
        Ref: rUserPool
  rIdentityPool:
    Type: AWS::Cognito::IdentityPool
    Properties:
      AllowClassicFlow: false
      AllowUnauthenticatedIdentities: false
      CognitoIdentityProviders:
      - ClientId:
          Ref: rUserPoolClient
        ProviderName:
          Fn::GetAtt:
          - rUserPool
          - ProviderName
        ServerSideTokenCheck: false
      IdentityPoolName:
        Fn::Sub: ${pProjectName}-${pEnvironment}-IdentityPool
  AuthUserRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: ${pProjectName}-${pEnvironment}-AuthUserRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Federated: cognito-identity.amazonaws.com
          Action:
          - sts:AssumeRoleWithWebIdentity
          Condition:
            StringEquals:
              cognito-identity.amazonaws.com:aud:
                Ref: rIdentityPool
            ForAnyValue:StringLike:
              cognito-identity.amazonaws.com:amr: authenticated
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AWSIoTDataAccess
      - arn:aws:iam::aws:policy/AWSIoTConfigAccess
      Policies:
      - PolicyName:
          Fn::Sub: ${pProjectName}-${pEnvironment}-Auth
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Sid: setup
            Effect: Allow
            Action:
            - mobileanalytics:PutEvents
            - cognito-sync:*
            - cognito-identity:*
            Resource: '*'
          - Sid: IoT
            Effect: Allow
            Action:
            - iot:Subscribe
            - iot:Receive
            - iot:Publish
            - iot:*
            Resource: '*'
  UnAuthUserRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: ${pProjectName}-${pEnvironment}-NothingAllowed
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Federated: cognito-identity.amazonaws.com
          Action:
          - sts:AssumeRoleWithWebIdentity
          Condition:
            StringEquals:
              cognito-identity.amazonaws.com:aud:
                Ref: rIdentityPool
            ForAnyValue:StringLike:
              cognito-identity.amazonaws.com:amr: unauthenticated
      Policies:
      - PolicyName:
          Fn::Sub: ${pProjectName}-${pEnvironment}-nothingAllowed
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Deny
            Action:
            - '*'
            Resource:
            - '*'
  IdentityPoolRoleAttachment:
    Type: AWS::Cognito::IdentityPoolRoleAttachment
    Properties:
      IdentityPoolId:
        Ref: rIdentityPool
      Roles:
        authenticated:
          Fn::GetAtt:
          - AuthUserRole
          - Arn
        unauthenticated:
          Fn::GetAtt:
          - UnAuthUserRole
          - Arn
Outputs:
  oDefaultDomain:
    Value:
      Fn::Sub: https://${pEnvironment}.${rAmplifyApp.DefaultDomain}
    Description: Amplify URL
    Export:
      Name:
        Fn::Sub: ${pProjectName}-${pEnvironment}-Domain
  oUserPoolARN:
    Value:
      Fn::GetAtt:
      - rUserPool
      - Arn
    Description: UserPool ARN
    Export:
      Name:
        Fn::Sub: ${pProjectName}-${pEnvironment}-UserPoolARN
  orUserPoolClient:
    Value:
      Ref: rUserPoolClient
    Description: rUserPoolClient
    Export:
      Name:
        Fn::Sub: ${pProjectName}-${pEnvironment}-userpoolswebclientid
  orUserPoolProviderName:
    Value:
      Fn::GetAtt:
      - rUserPool
      - ProviderName
    Description: CognitoIdentityProviderName
    Export:
      Name:
        Fn::Sub: ${pProjectName}-${pEnvironment}-ProviderName
  oUserPoolId:
    Value:
      Ref: rUserPool
    Description: Userpoolid
    Export:
      Name:
        Fn::Sub: ${pProjectName}-${pEnvironment}-UserPoolID
  orIdentityPoolId:
    Value:
      Ref: rIdentityPool
    Description: Identity Pool Id
    Export:
      Name:
        Fn::Sub: ${pProjectName}-${pEnvironment}-IdentityPool
